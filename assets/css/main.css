/**
 * Nexus Theme Main CSS
 *
 * Este archivo organiza e importa todos los componentes CSS del tema
 * usando un enfoque modular con cascade layers.
 */

/*
 * Capas de cascada para organizar la especificidad
 * https://developer.mozilla.org/en-US/docs/Web/CSS/@layer
 */
 @layer reset, base, utilities, layout, components, blocks, animations, overrides;

 /* Importaciones de archivos CSS */

 /* Reset y estilos base - Capa 'reset' */
 @import url('https://unpkg.com/modern-css-reset/dist/reset.min.css') layer(reset);

 /* Utilidades - Capa 'utilities' */
 @import 'utilities/colors.css' layer(utilities);
 @import 'utilities/spacing.css' layer(utilities);
 @import 'utilities/grid.css' layer(utilities);

 /* Componentes básicos - Capa 'base' */
 @import 'components/typography.css' layer(base);

 /* Componentes UI - Capa 'components' */
 @import 'components/buttons.css' layer(components);
 @import 'components/cards.css' layer(components);
 @import 'components/forms.css' layer(components);
 @import 'components/header.css' layer(components);
 @import 'components/footer.css' layer(components);
 @import 'components/menu.css' layer(components);

 /* Animaciones - Capa 'animations' */
 @import 'animations/transitions.css' layer(animations);
 @import 'animations/hover.css' layer(animations);
 @import 'animations/scroll.css' layer(animations);

 /* Soporte para navegadores antiguos */
 @supports not (selector(html:has(body))) {
   /* Estilos de fallback para navegadores que no soportan :has() */
   .menu-item-has-children > a::after {
     content: " ▼";
     font-size: 0.75em;
   }
 }

 /* Variables CSS globales */
 :root {
   /* Colors - También definidos en utilities/colors.css con más detalle */
   --color-primary: #3d5afe;
   --color-primary-dark: #0026ca;
   --color-primary-light: #8187ff;
   --color-secondary: #00c853;
   --color-secondary-dark: #009624;
   --color-secondary-light: #5efc82;
   --color-dark: #212121;
   --color-gray-dark: #424242;
   --color-gray: #9e9e9e;
   --color-gray-light: #e0e0e0;
   --color-light: #f5f5f5;
   --color-white: #ffffff;

   /* Spacing */
   --space-unit: 8px;
   --space-xs: calc(0.5 * var(--space-unit)); /* 4px */
   --space-sm: calc(1 * var(--space-unit));   /* 8px */
   --space-md: calc(2 * var(--space-unit));   /* 16px */
   --space-lg: calc(3 * var(--space-unit));   /* 24px */
   --space-xl: calc(4 * var(--space-unit));   /* 32px */
   --space-xxl: calc(6 * var(--space-unit));  /* 48px */

   /* Typography */
   --font-family-primary: 'Inter var', system-ui, -apple-system, BlinkMacSystemFont, sans-serif;
   --font-family-secondary: 'Merriweather', Georgia, serif;
   --font-size-base: 1rem;
   --line-height-base: 1.5;
   --font-weight-normal: 400;
   --font-weight-medium: 500;
   --font-weight-bold: 700;

   /* Layout */
   --container-max-width: 1200px;
   --container-padding: var(--space-md);
   --header-height: 80px;
   --footer-height: auto;
   --border-radius-sm: 4px;
   --border-radius-md: 8px;
   --border-radius-lg: 16px;

   /* Z-index layers */
   --z-index-dropdown: 100;
   --z-index-sticky: 200;
   --z-index-fixed: 300;
   --z-index-modal: 400;
   --z-index-popover: 500;
   --z-index-tooltip: 600;

   /* Transitions */
   --transition-fast: 0.2s ease;
   --transition-normal: 0.3s ease;
   --transition-slow: 0.5s ease;

   /* Shadows */
   --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
   --shadow-md: 0 4px 6px rgba(0, 0, 0, 0.12), 0 1px 3px rgba(0, 0, 0, 0.08);
   --shadow-lg: 0 10px 20px rgba(0, 0, 0, 0.12), 0 3px 6px rgba(0, 0, 0, 0.08);
   --shadow-xl: 0 15px 25px rgba(0, 0, 0, 0.15), 0 5px 10px rgba(0, 0, 0, 0.05);
 }

 /* Estilos para el contenedor principal */
 .container {
   width: 100%;
   max-width: var(--container-max-width);
   margin-left: auto;
   margin-right: auto;
   padding-left: var(--container-padding);
   padding-right: var(--container-padding);
 }

 /* Reglas básicas para el body */
 body {
   font-family: var(--font-family-primary);
   font-size: var(--font-size-base);
   line-height: var(--line-height-base);
   color: var(--color-dark);
   background-color: var(--color-white);
   -webkit-font-smoothing: antialiased;
   -moz-osx-font-smoothing: grayscale;
 }

 /* Utilidades para alineación de texto */
 .text-left { text-align: left; }
 .text-center { text-align: center; }
 .text-right { text-align: right; }

 /* Media queries básicas */
 @media (max-width: 576px) {
   :root {
     --container-padding: var(--space-sm);
     --header-height: 60px;
   }
 }

 @media (min-width: 577px) and (max-width: 768px) {
   :root {
     --container-padding: var(--space-md);
   }
 }

 @media (min-width: 769px) and (max-width: 992px) {
   :root {
     --container-padding: var(--space-md);
   }
 }

 @media (min-width: 993px) and (max-width: 1200px) {
   :root {
     --container-padding: var(--space-lg);
   }
 }

 @media (min-width: 1201px) {
   :root {
     --container-padding: var(--space-xl);
   }
 }

 /* Estilos para temas claros/oscuros */
 @media (prefers-color-scheme: dark) {
   :root {
     --color-dark: #f5f5f5;
     --color-gray-dark: #e0e0e0;
     --color-gray: #9e9e9e;
     --color-gray-light: #424242;
     --color-light: #212121;
     --color-white: #121212;
   }

   body {
     color: var(--color-dark);
     background-color: var(--color-white);
   }
 }

 /* Soporte para container queries */
 @supports (container-type: inline-size) {
   .card-container {
     container-type: inline-size;
     container-name: card;
   }

   @container card (min-width: 400px) {
     .card__title {
       font-size: 1.5rem;
     }

     .card__content {
       display: grid;
       grid-template-columns: 1fr 1fr;
       gap: var(--space-md);
     }
   }
 }

 /* View Transitions API */
 @supports (view-transition-name: main) {
   .page-content {
     view-transition-name: main;
   }

   ::view-transition-old(main) {
     animation: 0.5s cubic-bezier(0.4, 0, 0.2, 1) both fade-out;
   }

   ::view-transition-new(main) {
     animation: 0.5s cubic-bezier(0.4, 0, 0.2, 1) both fade-in;
   }

   @keyframes fade-out {
     from { opacity: 1; }
     to { opacity: 0; }
   }

   @keyframes fade-in {
     from { opacity: 0; }
     to { opacity: 1; }
   }
 }

 /* Scroll Timeline API - cuando esté disponible */
 @supports (animation-timeline: scroll()) {
   .parallax-section {
     animation: parallax linear;
     animation-timeline: scroll();
   }

   @keyframes parallax {
     from { transform: translateY(0); }
     to { transform: translateY(-50px); }
   }
 }

 /* Color Schemes avanzados - usando LCH */
 @supports (color: lch(0% 0 0)) {
   :root {
     --color-primary: lch(50% 80 270);
     --color-secondary: lch(70% 80 140);
   }
 }

 /* Estilos de capa overrides - siempre tienen prioridad */
 @layer overrides {
   .sr-only {
     position: absolute;
     width: 1px;
     height: 1px;
     padding: 0;
     margin: -1px;
     overflow: hidden;
     clip: rect(0, 0, 0, 0);
     white-space: nowrap;
     border-width: 0;
   }

   .visually-hidden:not(:focus):not(:active) {
     position: absolute;
     width: 1px;
     height: 1px;
     padding: 0;
     margin: -1px;
     overflow: hidden;
     clip: rect(0, 0, 0, 0);
     white-space: nowrap;
     border-width: 0;
   }
 }
